/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.ticket;

import datos.Ticket;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import negocios.ClientesBL;
import negocios.ReparacionesBL;
import negocios.TicketsBL;
import ui.JAppmain_ui;

/**
 *
 * @author REBOOTSYSTEM
 */
public class JCrearTicket extends javax.swing.JInternalFrame {

    // Declaración de variables 
    private Integer clienteID;
    private Integer reparacionID;
    private String nombreCliente;
    private Ticket ticket;
    private JAppmain_ui app;

    /**
     *
     */
    public JCrearTicket() {
        initComponents();
        this.ticket = ticket;
        dtDateTicket.setDate(new Date());
        fillComboClient();
        cboReparacion.setEnabled(false);
    }

    /**
     *
     * @param app
     */
    JCrearTicket(JAppmain_ui app) {
        initComponents();
        this.ticket = ticket;
        dtDateTicket.setDate(new Date());
        fillComboClient();
        cboReparacion.setEnabled(false);
        this.app = app;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnSave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dtDateTicket = new com.toedter.calendar.JDateChooser();
        cboCliente = new javax.swing.JComboBox<>();
        cboReparacion = new javax.swing.JComboBox<>();

        setClosable(true);
        setTitle("Crear Ticket");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/res/invoice24add.png"))); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/diskette_24.png"))); // NOI18N
        btnSave.setText("Guardar");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);

        jLabel9.setText("Valor Unitario");

        jLabel1.setText("Fecha:");

        jLabel2.setText("Cliente:");

        jLabel3.setText("Reparación");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Crear Ticket");
        jLabel7.setOpaque(true);

        dtDateTicket.setDateFormatString("yyyy-MM-dd");

        cboCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboClienteItemStateChanged(evt);
            }
        });

        cboReparacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboReparacionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addComponent(cboReparacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtDateTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 184, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtDateTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboReparacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // Guarda los cambios

        try {
            Ticket ticket = new Ticket();

            if (dtDateTicket.getDateFormatString().length() > 0) {
                ticket.setFecha(dtDateTicket.getDateFormatString());
                if (clienteID != null) {
                    ticket.setClienteID(clienteID);
                    if (reparacionID != null) {
                        ticket.setReparacionID(reparacionID);

                        ticket.setUsuarioID(this.app.user.getId());
                        ticket.setEstado("Facturado");
                        if (txtValor.getText().length() > 0) {
                            ticket.setValorTotal(Double.parseDouble(txtValor.getText()));

                            //Crear el ticket
                            TicketsBL.create(ticket);

                            // Se actualiza el estado de la reparación a facturado
                            ReparacionesBL.updateStatus("Facturado", reparacionID);
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(cboReparacion, "Debe seleccionar una reparación para facturar");
                        cboReparacion.requestFocus();
                    }
                        JOptionPane.showMessageDialog(cboCliente, "Debe seleccionar un cliente para facturar");
                        cboCliente.requestFocus();
                    
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void cboClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboClienteItemStateChanged

        ClientesBL.ClientesCbo cbo = (ClientesBL.ClientesCbo) cboCliente.getSelectedItem();

        this.clienteID = cbo.getId();
        this.nombreCliente = cbo.getNombre_completo();

        cboReparacion.setEnabled(true);
        fillComboRepairs();
    }//GEN-LAST:event_cboClienteItemStateChanged

    private void cboReparacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboReparacionItemStateChanged
        // 
        ReparacionesBL.ReparacionesCBO cbo = (ReparacionesBL.ReparacionesCBO) cboReparacion.getSelectedItem();

        if (cbo != null) {
            this.reparacionID = cbo.getId();
        }

    }//GEN-LAST:event_cboReparacionItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cboCliente;
    private javax.swing.JComboBox<String> cboReparacion;
    private com.toedter.calendar.JDateChooser dtDateTicket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    private void fillComboClient() {
        this.cboCliente.removeAllItems();
        try {
            DefaultComboBoxModel modelClientes;

            modelClientes = ClientesBL.cboClientes();
            this.cboCliente.setModel(modelClientes);
            //disableButtons();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar la lista de clientes " + e.getMessage());
            e.printStackTrace();
        }

    }

    private void fillComboRepairs() {
        this.cboReparacion.removeAllItems();
        this.cboReparacion.setEnabled(true);

        try {
            DefaultComboBoxModel modelReparaciones;

            modelReparaciones = ReparacionesBL.cboReparaciones(clienteID);
            this.cboReparacion.setModel(modelReparaciones);
            //disableButtons();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar la lista de reparaciones " + e.getMessage());
            e.printStackTrace();
        }
    }
}
